-- local status_ok, navic = pcall(require, "nvim-navic")
-- if not status_ok then
-- 	return
-- end
--
-- navic.setup({
-- 	icons = {
-- 		Array = " ",
-- 		Boolean = "蘒",
-- 		Class = " ",
-- 		Color = " ",
-- 		Constant = " ",
-- 		Constructor = " ",
-- 		Enum = " ",
-- 		EnumMember = " ",
-- 		Event = " ",
-- 		Field = " ",
-- 		File = " ",
-- 		Folder = " ",
-- 		Function = " ",
-- 		Interface = " ",
-- 		Key = " ",
-- 		Keyword = " ",
-- 		Method = " ",
-- 		Module = " ",
-- 		Namespace = " ",
-- 		Null = "ﳠ ",
-- 		Number = " ",
-- 		Object = " ",
-- 		Operator = " ",
-- 		Package = " ",
-- 		Property = " ",
-- 		Reference = " ",
-- 		Snippet = " ",
-- 		String = " ",
-- 		Struct = " ",
-- 		Text = " ",
-- 		TypeParameter = " ",
-- 		Unit = " ",
-- 		Value = " ",
-- 		Variable = " ",
-- 	},
-- 	highlight = true,
-- 	separator = " > ",
-- 	depth_limit = 0,
-- 	depth_limit_indicator = "..",
-- 	safe_output = true,
-- })
--
-- local M = {}
--
-- M.file_exclude = {
-- 	"help",
-- 	"startify",
-- 	"dashboard",
-- 	"packer",
-- 	"neogitstatus",
-- 	"NvimTree",
-- 	"Trouble",
-- 	"alpha",
-- 	"lir",
-- 	"Outline",
-- 	"spectre_panel",
-- 	"toggleterm",
-- }
--
-- local excludes = function()
-- 	if vim.tbl_contains(M.file_exclude, vim.bo.filetype) then
-- 		vim.opt_local.winbar = nil
-- 		return true
-- 	end
-- 	return false
-- end
--
-- function M.getnavic()
-- 	if excludes() then
-- 		return ""
-- 	end
-- 	if navic.is_available() then
-- 		return navic.get_location()
-- 	else
-- 		return
-- 	end
-- end
--
-- return M
